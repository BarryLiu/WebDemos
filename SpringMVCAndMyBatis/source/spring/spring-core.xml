<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd ">
    
    <!-- 开启spring 的注解功能 -->
    <mvc:annotation-driven />
    
    <!-- 配置要用spring 注解管理的类的包路径 -->
    <context:component-scan base-package="jing.dao"/>
    <context:component-scan base-package="jing.service"/>
    <context:component-scan base-package="jing.controller"/>
    
    <!-- 过滤掉 html css javascript   因为web.xml 中 spring的 url-pattern 为 / 全部-->
    <mvc:default-servlet-handler/>
    
    
    <!-- 添加 db.properties 文件 填写数据库连接的信息   让下面的 ${jdbc.xxxx} 能够找到          在mybatis中是(<properties resource="db.properties"> </properties>)-->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <property name="locations">
             <list>
                 <value>classpath:db.properties</value>
             </list>
         </property>
     </bean>
     
    
    <!-- c3p0 数据源 -->
    <bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    
    <!-- 配置会话工厂 SessionFactory:openSession() -->
    <bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds"></property>
        <!-- 注入 mybatis 的mapper.xml 文件 -->
        <property name="mapperLocations">
			<list>
				<value>classpath:jing/entity/mapper/*.xml</value> 
			</list>
		</property>
    </bean>
    
    <!-- mybatis 的 模板接口与spring 连接 -->
    <bean id="template" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="factory"></constructor-arg>
    </bean>
    
    
    
    
    <!-- 开启事务注解 -->
	<!-- <tx:annotation-driven /> -->
    
    <!-- 配置事物 -->
    <!-- 事物管理器 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ds"></property>
    </bean>
    <!-- 事物模板 -->
    <tx:advice id="adv1" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
	
    <!-- 执行事务 -->
    <aop:config>
		<aop:advisor pointcut="execution(* jing.service.*Service.*(..))" advice-ref="adv1"/>        
    </aop:config>
    
</beans>
